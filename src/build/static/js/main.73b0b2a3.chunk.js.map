{"version":3,"sources":["assets/images/react-blog.png","assets/images/redux-blog.jpg","assets/images/mern-blog.png","pages/home.page.js","pages/about.page.js","components/article.list.item.js","pages/article-content/articles.content.js","pages/PageNotFound.page.js","components/comment.list.js","components/upvote.section.js","components/addcomment.form.js","pages/article.page.js","pages/articles.list.page.js","navbar.js","App.js","index.js"],"names":["module","exports","HomePage","Fragment","className","to","AboutPage","href","ArticleList","articles","map","article","index","key","name","colorscheme","title","content","length","substring","myArticles","img","reactimage","mernimage","reduximage","PageNotFound","CommentsList","comments","comment","username","text","UpvoteSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","id","onClick","AddCommentForm","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","style","borderColor","replace","type","value","onChange","event","target","rows","cols","ArticlesPage","match","articleInfo","articleNameFromURL","params","find","otherArticles","filter","useEffect","fetchData","src","alt","padding","paragraph","ArticlesListPage","Navbar","class","App","exact","path","component","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73b0b2a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react-blog.d561b5a7.png\";","module.exports = __webpack_public_path__ + \"static/media/redux-blog.ee72c190.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mern-blog.84c20e08.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HomePage = () => (\r\n  <React.Fragment>\r\n    <h1>\r\n      Hello , <span className=\"blue-scheme\">Welcome</span> to my blog!\r\n    </h1>\r\n    <h3 className=\"green-scheme\">MERN PROJECT </h3>\r\n    <p>\r\n      This is a single-page web application. Even though this is a project I\r\n      made to learn NodeJS and MongoDB , I did add a few articles/blogs that\r\n      people could find interesting and really useful.\r\n    </p>\r\n    <p>\r\n      The articles are mainly about React and Node , but I do plan on adding\r\n      more.\r\n    </p>\r\n    <p>\r\n      The site is styled minimally because my main aim while building this was\r\n      to get it to work and concentrate on learning more about the functionality\r\n      .\r\n    </p>\r\n    <p>\r\n      This Blog site is built using :\r\n      <ul>\r\n        <li className=\"green-scheme\">MongoDB</li>\r\n        <li className=\"yellow-scheme\">Express</li>\r\n        <li className=\"blue-scheme\">ReactJS</li>\r\n        <li className=\"red-scheme\">NodeJS</li>\r\n      </ul>\r\n    </p>\r\n    <p>It is being hosted on an Amazon AWS EC2 Instance.</p>\r\n    <p>\r\n      You could read more about it in the\r\n      <Link to=\"/about\"> About</Link> section.\r\n    </p>\r\n    <p>\r\n      To do:\r\n      <ul>\r\n        <li>\r\n          Learn and add an SMTP functionality to receive emails from my readers.\r\n        </li>\r\n        <li>Work om making the styling better.</li>\r\n        <li>Experiment a little more with AWS.</li>\r\n      </ul>\r\n    </p>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nconst AboutPage = () => (\r\n  <React.Fragment>\r\n    <h1>About Me</h1>\r\n    <p>\r\n      Hey , my name is Aftab and I am a Front-end web-applications developer.\r\n    </p>\r\n    <p>\r\n      I have 2 years of experience working as a React JS developer. I have\r\n      worked on several ReactJS projects and am highly skilled in front end web\r\n      technologies and frameworks. I'm extremely passionate about web\r\n      development and design.\r\n    </p>\r\n    <p>\r\n      This is my MERN stack project website. It is currently being hosted on an\r\n      amazon ec2 instance. It uses the on premise version of MongoDB. This\r\n      project uses React Router for having different pages. I have created api's\r\n      using Express to provide apis to upvote an article and to add comments to\r\n      an article.\r\n    </p>\r\n    <p>\r\n      Please do visit my <a href=\"http://bit.ly/aftab_portfolio\">Portfolio</a>{\" \"}\r\n      to know more and to find my resume/contact details and the code for this\r\n      project on my github.\r\n      <br />\r\n    </p>\r\n    <p>Thanks for visiting the site.</p>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default AboutPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function ArticleList({ articles }) {\r\n  return (\r\n    <>\r\n      {articles.map((article, index) => (\r\n        <Link\r\n          className=\"article-list-item\"\r\n          key={index}\r\n          to={`/article/${article.name}`}\r\n        >\r\n          <h3 className={article.colorscheme}>{article.title}</h3>\r\n          <p>\r\n            {article.content.length && article.content[0].substring(0, 150)}...\r\n          </p>\r\n        </Link>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","import reactimage from \"../../assets/images/react-blog.png\";\r\nimport reduximage from \"../../assets/images/redux-blog.jpg\";\r\nimport mernimage from \"../../assets/images/mern-blog.png\";\r\n\r\nconst myArticles = [\r\n  {\r\n    name: \"learn-react\",\r\n    title: \"The Best Way to Learn React\",\r\n    content: [\r\n      \"According to me , the key to being good at React (or any other JavaScript based framework) is being good with Javascript.\",\r\n      \"By 'good', I don't mean you have to know each and every javascript concept , although it would help if you did.\",\r\n      \"Therefore , before taking a deep dive into the world of React , take a week (yes , an entire week) to master all the core Javascript concepts\",\r\n      \"Scopes , Arrays , Objects , Looping , Callbacks ...\",\r\n      \"Look up 'ES6 features' and learn all of them and them\",\r\n      \"And you should obviously be equally comfortable with HTML and CSS\",\r\n      \"If you know the basics of HTML/CSS/Javascript , it wont work, you'll get stuck with small errors which is going to annoy the hell out of you\",\r\n      \"Take a week or two , be amazing at HTML/CSS/JS, it will make Learning React a breeze\",\r\n      \"If you've learnt all the basics well and if you are now comfortable with ES6 . React is going to be super easy.\",\r\n      \"Being comfortable with Javascript makes learning React enjoyable.\",\r\n      \"And one more thing. A big part of React is going to involve calling apis to get/send data . It would be highly recommended to learn how to make service calls and it would be really helpful to know about HTTP request/responses , status codes etc\",\r\n      \"After this when you start learning React start with Class components. React 'Hooks' are great. And right now everyone is moving to use Hooks instead of React Classes.\",\r\n      \"But if you spend some time learning React Class based components first , You will have a better understanding of how React renders components and how the 'Component Life Cycle works'.\",\r\n      \"After you've learnt Class and Functional components , then proceed with more advanced topics like Hooks , Redux , Styled-Components , API calls etc.\",\r\n      \"Thank you for reading.   -Aftab\",\r\n    ],\r\n    img: reactimage,\r\n    colorscheme: \"blue-scheme\",\r\n  },\r\n  {\r\n    name: \"learn-mern\",\r\n    title: \"Getting Started With MERN\",\r\n    content: [\r\n      \"MERN Stack -one of the most popular tech stack out there.\",\r\n      \"MERN (as you know ) stands for MONGODB - the database for storing records , EXPRESS - the framework used by NODE to accept requests from the front end and send back response , NODE - the backed , Its allows you to run Javascript on a server . Node along with frameworks like express can help in making apis , server side rendered web apps etc, REACT - The front end , the view-layer that a user interacts with. Send requests to Node+Express-server. Node+Express server listens to requests made by React-front-end , Node+Express-server connects to MONGODB to get the requested data , then sends it back to REACT, REACT displays the received data for the user to view.\",\r\n      \"If you are comfortable with Javascript Node+Express is going to be fairly easy.\",\r\n      \"And if you know what JSON is and how to iterate and play around with JSON objects , then MongoDB is fairly simple as as well\",\r\n      \"This is my first MERN stack application , and it wasn't that difficult to make\",\r\n      \"NODE+EXPRESS is quiet fun. The only difficulty I faced was when I was deploying this site on an aws ec2 instance. MongoDB installation on ec2 instance was a bit troublesome but I was able to figure it out eventually.\",\r\n      \"I will soon create a detailed article specific to this site's development and deployment.\",\r\n      \"Thank you for reading.   -Aftab\",\r\n    ],\r\n    img: mernimage,\r\n    colorscheme: \"green-scheme\",\r\n  },\r\n  {\r\n    name: \"learn-redux\",\r\n    title: \"Redux Flow\",\r\n    content: [\r\n      \"Redux is a state management library for react. What does 'State Management' mean? \",\r\n      \"All web application have a tonne of data they store on the front end, like on an ecommerce website the website stores stuff like : whats in the users cart, whats the name of the user , users previous order history , users shopping preferences , user's reviews etc.\",\r\n      \"You might say that some of this data is stored in the database , and you are right. But once React fetches the all this data from data base, it stores it in the front end as well ,for it to be displayed on the UI. All the data that the user can see and interact with on the UI forms the state of the application.\",\r\n      \"As applications grow bigger and have a lot of functionalities , managing a huge tonne of data becomes really complex\",\r\n      \"Since React mostly takes care of the UI , we need help from a 3rd party library to manage the state\",\r\n      \"Redux state management flow is as follows: Instead of storing the state inside each component , you make the state global and call it store. Create a 'Reducer' for each kind of component , let the reducer return the initial state of that component and let the reducer modify the future state. Once all the Reducers are ready , combine them to create a 'store'.\",\r\n      \"Root Reducer = combining individual Reducers (This forms your global state/store)\",\r\n      \"Define Action Types and Actions , which when triggered tell the reducer to update the store.\",\r\n      \"Connect your component to the redux store , and use the state values to populate the UI, each time the global state changes , it causes the UI to update as well , use Actions to trigger state change from the UI.\",\r\n      \"This article briefly explains the high level flow for redux.\",\r\n      \"Thank you for reading.   -Aftab\",\r\n    ],\r\n    img: reduximage,\r\n    colorscheme: \"purple-scheme\",\r\n  },\r\n];\r\n\r\nexport default myArticles;\r\n","import React from \"react\";\r\n\r\nexport default function PageNotFound() {\r\n  return (\r\n    <>\r\n      <h1>404 page not found</h1>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst CommentsList = ({ comments }) => (\r\n  <>\r\n  <h3>Comments</h3>\r\n    {comments.map((comment,key) => (\r\n      <div key={key} className=\"comment\">\r\n        <h4>{comment.username}</h4>\r\n        <p>{comment.text}</p>\r\n      </div>\r\n    ))}\r\n  </>\r\n);\r\n\r\nexport default CommentsList;\r\n","import React from \"react\";\r\n\r\nconst UpvoteSection = ({\r\n  articleName,\r\n  upvotes,\r\n  setArticleInfo,\r\n  colorscheme,\r\n}) => {\r\n  const upvoteArticle = async () => {\r\n    const result = await fetch(`/api/articles/${articleName}/upvote`, {\r\n      method: \"post\",\r\n    });\r\n    const body = await result.json();\r\n    setArticleInfo(body);\r\n  };\r\n  return (\r\n    <div id=\"upvotes-section\">\r\n      <p>This post has been upvoted {upvotes} times</p>\r\n      <br />\r\n      <button\r\n        onClick={() => upvoteArticle()}\r\n        className={`button-${colorscheme}`}\r\n      >\r\n        Add Upvote 👍\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpvoteSection;\r\n","import React, { useState } from \"react\";\r\n\r\nconst AddCommentForm = ({ articleName, setArticleInfo, colorscheme }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [commentText, setCommentText] = useState(\"\");\r\n\r\n  const addComment = async () => {\r\n    const result = await fetch(`/api/articles/${articleName}/add-comment`, {\r\n      method: \"post\",\r\n      body: JSON.stringify({\r\n        username: username,\r\n        text: commentText,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const body = await result.json();\r\n    setArticleInfo(body);\r\n    setUsername(\"\");\r\n    setCommentText(\"\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id=\"add-comment-form\"\r\n      style={{ borderColor: colorscheme.replace(\"-scheme\", \"\") }}\r\n    >\r\n      <h3>Add a Comment</h3>\r\n      <label>\r\n        Name:\r\n        <input\r\n          type=\"text\"\r\n          className={colorscheme}\r\n          value={username}\r\n          onChange={(event) => setUsername(event.target.value)}\r\n        />\r\n      </label>\r\n      <label>\r\n        Comment:\r\n        <textarea\r\n          rows=\"4\"\r\n          cols=\"50\"\r\n          value={commentText}\r\n          className={colorscheme}\r\n          onChange={(event) => setCommentText(event.target.value)}\r\n        />\r\n      </label>\r\n      <button className={`button-${colorscheme}`} onClick={() => addComment()}>\r\n        Add Comment 🙌\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCommentForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ArticleList from \"../components/article.list.item\";\r\nimport myArticles from \"./article-content/articles.content\";\r\nimport PageNotFound from \"./PageNotFound.page\";\r\nimport CommentsList from \"../components/comment.list\";\r\nimport UpvoteSection from \"../components/upvote.section\";\r\nimport AddCommentForm from \"../components/addcomment.form\";\r\n\r\nconst ArticlesPage = ({ match }) => {\r\n  const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\r\n  const articleNameFromURL = match.params.name;\r\n  const article = myArticles.find(\r\n    (article) => article.name === articleNameFromURL\r\n  );\r\n\r\n  const otherArticles = myArticles.filter(\r\n    (article) => article.name !== articleNameFromURL\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await fetch(`/api/articles/${articleNameFromURL}`);\r\n      const body = await result.json();\r\n      setArticleInfo(body);\r\n    };\r\n    fetchData();\r\n  }, [articleNameFromURL]);\r\n\r\n  if (!article) {\r\n    return <PageNotFound />;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1 className={article.colorscheme}>{article.title}</h1>\r\n      <img src={article.img} alt=\"blog-banner\" style={{ padding: \"10px\" }} />\r\n      {article.content.map((paragraph, index) => (\r\n        <p key={index}>{paragraph}</p>\r\n      ))}\r\n      <UpvoteSection\r\n        articleName={articleNameFromURL}\r\n        upvotes={articleInfo.upvotes}\r\n        setArticleInfo={setArticleInfo}\r\n        colorscheme={article.colorscheme}\r\n      />\r\n\r\n      <CommentsList comments={articleInfo.comments} />\r\n      <AddCommentForm\r\n        articleName={articleNameFromURL}\r\n        colorscheme={article.colorscheme}\r\n        setArticleInfo={setArticleInfo}\r\n      />\r\n      <div id=\"other-articles\">\r\n        <h3>Other Articles:</h3>\r\n        <ArticleList articles={otherArticles} />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default ArticlesPage;\r\n","import React from \"react\";\r\nimport myArticles from \"./article-content/articles.content\";\r\nimport ArticleList from \"../components/article.list.item\";\r\n\r\nconst ArticlesListPage = () => (\r\n  <React.Fragment>\r\n    <h1>Articles List</h1>\r\n    <ArticleList articles={myArticles} />\r\n  </React.Fragment>\r\n);\r\n\r\nexport default ArticlesListPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <>\r\n      <nav>\r\n        <ul class=\"menu\">\r\n          <li>\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/articles-list\">Articles</Link>\r\n            <Link to=\"/about\">About</Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport HomePage from \"./pages/home.page\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport AboutPage from \"./pages/about.page\";\nimport ArticlesPage from \"./pages/article.page\";\nimport ArticlesListPage from \"./pages/articles.list.page\";\nimport PageNotFound from \"./pages/PageNotFound.page\";\nimport Navbar from \"./navbar\";\nimport \"./App.scss\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <div id=\"page-body\">\n            <Switch>\n              <Route exact path=\"/\" component={HomePage} />\n              <Route exact path=\"/about\" component={AboutPage} />\n              <Route exact path=\"/article/:name\" component={ArticlesPage} />\n              <Route exact path=\"/articles-list\" component={ArticlesListPage} />\n              <Route component={PageNotFound} />\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}